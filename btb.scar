
import("ScarUtil.scar")
import("Fatalities/Fatalities.scar")
import("Prototype/WorldEntityCollector.scar")
import("Prototype/VPTickerWin-Annihilate_Functions.scar")
import("Prototype/SpecialAEFunctions.scar")
import("PrintOnScreen.scar")
import("WinConditions/Annihilate.scar")

SetGlobals()
Scar_AddInit(VPTicker_OnInit)

local BtB_AIPlayers
local BtB_AIPlayerCount

local BtB_Settings = {
	BattleRadius = 45
}

local function BtB_IsSquadVehicle(squad)
	return Squad_GetMax(squad) > 1 or Squad_GetHealthMax(squad) < 150
end

local function BtB_RetreatTactic(squad)
	local pos = Squad_GetPosition(squad)
	local p = Squad_GetPlayerOwner(squad)
	local team = Player_GetTeam(p)
	local enemyTeam = Team_GetEnemyTeam(team)
	local squadsNearSG_enemy = SGroup_CreateIfNotFound("BtB_RetreatTactic_squadsNear_enemy")
	local squadsNearSG_allied = SGroup_CreateIfNotFound("BtB_RetreatTactic_squadsNear_allied")
	SGroup_Clear(squadsNearSG_enemy)
	SGroup_Clear(squadsNearSG_allied)
	Team_GetAllSquadsNearMarker(enemyTeam, squadsNearSG_enemy , pos, BtB_Settings.BattleRadius)
	Team_GetAllSquadsNearMarker(team     , squadsNearSG_allied, pos, BtB_Settings.BattleRadius)
	
	local result = -0.12
	
	local fullLoadout = Squad_GetMax(squad)
	local unitsLeft = Squad_Count(squad)
	local unitLeftRatio = unitsLeft/fullLoadout
	if unitsLeft < fullLoadout then
		--if World_GetRand(0, 1000) == 1 then result = result + 20 end
		if unitsLeft > 2 then result = result - unitsLeft/1.5 end
	else
		result = result - 2
		if unitsLeft == 1 then result = result - 8 end -- leader units
	end
	if unitLeftRatio < 0.45 then
		result = result + 5
	else
		result = result + 5*(0.7-unitLeftRatio)
	end
	
	--local maxHealth = Squad_GetHealthMax(squad)
	local healthLeft = Squad_GetHealth(squad)
	local healthLeftPercentage = Squad_GetHealthPercentage(squad)
	result = result + 3.5*math.max(0, 0.925-healthLeftPercentage)
	
	if Squad_IsInHoldEntity(squad) then
		result = result - 2
		if Squad_IsUnderAttack(squad, 5) then
			if Squad_Count(squad) == 1 then result = result + 1.75 end
			result = result + 0.5
			if healthLeftPercentage < 0.275 or healthLeft < 70 then
				result = result + 5
			end
			result = result + math.max(0, math.min((90-healthLeft)/11, 5))
		end
		if Squad_IsAttacking(squad, 5) then
			result = result - 2
		end
	else
		if Squad_IsUnderAttack(squad, 5) then
			if Squad_Count(squad) == 1 then result = result + 1.75 end
			result = result + 0.25
			if healthLeftPercentage < 0.275 or healthLeft < 80 then
				result = result + 5
			end
			result = result + math.max(0, math.min((90-healthLeft)/11, 5))
		end
		if Squad_IsAttacking(squad, 5) then result = result - 0.45 end
	end
	
	--if AIPlayer_IsFireConePosition(s_selfplayer, anchor_pos) then result = result + 1.5 end
	if Squad_IsPinned(squad) then result = result + 2.5 end
	
	local closestEnemyDistaceSq -- squared
	local enemyValue = 0
	local friendlyValue = 0
	local squadsNearSG_enemyCount = SGroup_Count(squadsNearSG_enemy)
	local squadsNearSG_alliedCount = SGroup_Count(squadsNearSG_allied)
	for i=1,squadsNearSG_enemyCount do
		local enemySquad = SGroup_GetSpawnedSquadAt(i)
		if BtB_IsSquadVehicle(enemySquad) then
			enemyValue = enemyValue + Squad_GetHealth(enemySquad)/50
		else
			enemyValue = enemyValue + Squad_Count(enemySquad)
		end
		local dist = World_DistanceSquaredPointToPoint(anchor_pos, Squad_GetPosition(enemySquad))
		if not closestEnemyDistaceSq or closestEnemyDistaceSq > closestEnemyDistaceSq then
			closestEnemyDistaceSq = dist
		end
	end
	for i=1,squadsNearSG_alliedCount do
		local friendlySquad = SGroup_GetSpawnedSquadAt(i)
		if not BtB_IsSquadVehicle(friendlySquad) then
			friendlyValue = friendlyValue + Squad_GetHealth(friendlySquad)/50
		else
			friendlyValue = friendlyValue + Squad_Count(friendlySquad)
		end
	end
	
	if closestEnemyDistaceSq and closestEnemyDistaceSq < 400 then
		result = result + (420-closestEnemyDistaceSq)/100
	end
	
	SGroup_Destroy(squadsNearSG_enemy)
	SGroup_Destroy(squadsNearSG_allied)
	
	result = result + enemyValue/4.5 - math.min(friendlyValue, enemyValue)/5.75
	
	return math.max(0, result)
end

local function BtB_AIPlayerRules()
	for i=1,BtB_AIPlayerCount do
		local p = BtB_AIPlayers[i]
		local squadsSG = Player_GetSquads(p)
		local squadSGCount = SGroup_CountSpawned(squadsSG)
		for j=1,squadSGCount do
			local squad = SGroup_GetSpawnedSquadAt(j)
			
			if not Squad_IsRetreating(squad) and not BtB_IsSquadVehicle(squad) then
				local retreatDemand = BtB_RetreatTactic(squad)
				if retreatDemand > 0 then
					local r = World_GetRand(1, 10)
					if r <= retreatDemand then
						if Squad_IsInHoldEntity(squad) then -- eject squads in entity hold
							local holdEntity = Squad_GetHoldEntity(squad)
							local tmpEG = EGroup_CreateIfNotFound('BtB_tmp')
							EGroup_Clear(tmpEG)
							EGroup_Add(tmpEG, holdEntity)
							Cmd_EjectOccupants(tmpEG)
							EGroup_Destroy(tmpSG)
							Cmd_Retreat(squad, nil, nil, true) -- queued retreat
						elseif Squad_IsInHoldSquad(squad) then -- eject squads in squad hold
							local holdSquad = Squad_GetHoldSquad(squad)
							local tmpSG = SGroup_CreateIfNotFound('BtB_tmp')
							SGroup_Clear(tmpSG)
							SGroup_Add(tmpSG, holdSquad)
							Cmd_EjectOccupants(tmpSG)
							SGroup_Destroy(tmpSG)
							Cmd_Retreat(squad, nil, nil, true) -- queued retreat
						else
							Cmd_Retreat(squad)
						end
					end
				end
			end
		end
	end
end

local function BtB_SetupAIPlayer(p)
	BtB_AIPlayerCount = BtB_AIPlayerCount + 1
	BtB_AIPlayers[BtB_AIPlayerCount] = p
	
	Modify_PlayerProductionRate(p, 1.1)
	Modify_PlayerExperienceReceived(p, 1.05)
	Modify_PlayerResourceRate(p, RT_Manpower, 1.15)
	Modify_PlayerResourceRate(p, RT_Munition, 1.25)
	Modify_PlayerResourceRate(p, RT_Fuel, 1.05)
end

local function BtB_WinCondition_Init()
	BtB_AIPlayers = {}
	BtB_AIPlayerCount = 0
	for i=1,World_GetPlayerCount() do
		local p = World_GetPlayerAt(i)
		Modify_PlayerResourceRate(p, RT_Manpower, 50/60/8, MUT_Addition)
		Modify_PlayerResourceRate(p, RT_Fuel, 1.5/60/8, MUT_Addition)
		Modify_PlayerSightRadius(p, 1.05)
		if not Player_IsHuman(p) then
			BtB_SetupAIPlayer(p)
		end
	end
end

Scar_AddInit(BtB_WinCondition_Init)
